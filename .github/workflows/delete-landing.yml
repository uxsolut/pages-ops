name: Delete Landing

on:
  workflow_dispatch:
    inputs:
      domain:
        description: 'Domínio'
        type: choice
        options: [pinacle.com.br, gestordecapitais.com, tetramusic.com.br]
        required: true
      slug:
        description: 'Slug (a-z0-9- ou beta/dev + slug, ex.: "legal" ou "beta/legal")'
        required: true
  repository_dispatch:
    types: [delete-landing]  # permite disparo via API/Backend

jobs:
  delete:
    runs-on: ubuntu-latest

    steps:
      - name: Preparar SSH
        env:
          GH_SSH_HOST: ${{ secrets.SSH_HOST }}
          GH_SSH_USER: ${{ secrets.SSH_USER }}
          GH_SSH_KEY:  ${{ secrets.SSH_KEY }}
          GH_SSH_PORT: ${{ secrets.SSH_PORT }}  # pode estar vazio
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          printf "%s" "${GH_SSH_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          SSH_PORT="${GH_SSH_PORT:-22}"
          ssh-keyscan -p "${SSH_PORT}" -H "${GH_SSH_HOST}" >> ~/.ssh/known_hosts
          echo "SSH_PORT=${SSH_PORT}"    >> "${GITHUB_ENV}"
          echo "SSH_HOST=${GH_SSH_HOST}" >> "${GITHUB_ENV}"
          echo "SSH_USER=${GH_SSH_USER}" >> "${GITHUB_ENV}"

      - name: Resolver domain/slug (manual x externo)
        id: resolve
        run: |
          if [ -n "${{ github.event.inputs.domain }}" ]; then
            echo "domain=${{ github.event.inputs.domain }}" >> "${GITHUB_OUTPUT}"
            echo "slug=${{ github.event.inputs.slug }}"     >> "${GITHUB_OUTPUT}"
          else
            echo "domain=${{ github.event.client_payload.domain }}" >> "${GITHUB_OUTPUT}"
            echo "slug=${{ github.event.client_payload.slug }}"     >> "${GITHUB_OUTPUT}"
          fi

      - name: Apagar pasta do deploy
        env:
          DOMAIN: ${{ steps.resolve.outputs.domain }}
          SLUG:   ${{ steps.resolve.outputs.slug }}
        run: |
          set -euo pipefail
          echo "Apagando /var/www/pages/${DOMAIN}/${SLUG}"

          ssh -i ~/.ssh/id_rsa -p "${SSH_PORT}" "${SSH_USER}@${SSH_HOST}" \
            "DOMAIN='${DOMAIN}' SLUG='${SLUG}' bash -s" <<'EOF'
          set -euo pipefail

          # Validações defensivas
          [[ "${DOMAIN}" =~ ^[a-z0-9.-]+$ ]] || { echo "domain inválido"; exit 1; }
          # aceita "slug" OU "beta/slug" OU "dev/slug"
          [[ "${SLUG}" =~ ^([a-z0-9-]{1,64}|(beta|dev)/[a-z0-9-]{1,64})$ ]] || { echo "slug inválido"; exit 1; }

          TARGET="/var/www/pages/${DOMAIN}/${SLUG}"
          if [ -d "${TARGET}" ]; then
            rm -rf -- "${TARGET}"
            echo "Apagado: ${TARGET}"
          else
            echo "Nada para apagar: ${TARGET}"
          fi
          EOF
