name: Delete Landing

on:
  workflow_dispatch:
    inputs:
      domain:
        description: 'Domínio'
        type: choice
        options: [pinacle.com.br, gestordecapitais.com, tetramusic.com.br]
        required: true
      slug:
        description: 'Slug (a-z0-9- ou beta/dev + slug; deixe em branco p/ raiz)'
        required: false
        default: ""
  repository_dispatch:
    types: [delete-landing]  # permite disparo via API/Backend

permissions:
  contents: read

concurrency:
  group: delete-landing
  cancel-in-progress: true

jobs:
  delete:
    runs-on: ubuntu-latest

    steps:
      - name: Preparar SSH
        env:
          GH_SSH_HOST: ${{ secrets.SSH_HOST }}
          GH_SSH_USER: ${{ secrets.SSH_USER }}
          GH_SSH_KEY:  ${{ secrets.SSH_KEY }}
          GH_SSH_PORT: ${{ secrets.SSH_PORT }}  # opcional
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          printf "%s" "${GH_SSH_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          SSH_PORT="${GH_SSH_PORT:-22}"
          ssh-keyscan -p "${SSH_PORT}" -H "${GH_SSH_HOST}" >> ~/.ssh/known_hosts
          echo "SSH_PORT=${SSH_PORT}"    >> "${GITHUB_ENV}"
          echo "SSH_HOST=${GH_SSH_HOST}" >> "${GITHUB_ENV}"
          echo "SSH_USER=${GH_SSH_USER}" >> "${GITHUB_ENV}"

      - name: Resolver domain/slug (manual x externo)
        id: resolve
        run: |
          set -euo pipefail
          if [ -n "${{ github.event.inputs.domain }}" ]; then
            echo "domain=${{ github.event.inputs.domain }}" >> "${GITHUB_OUTPUT}"
            # aceita vazio
            echo "slug=${{ github.event.inputs.slug }}"     >> "${GITHUB_OUTPUT}"
          else
            echo "domain=${{ github.event.client_payload.domain }}" >> "${GITHUB_OUTPUT}"
            # aceita vazio
            echo "slug=${{ github.event.client_payload.slug }}"     >> "${GITHUB_OUTPUT}"
          fi

      - name: Apagar pasta do deploy (seguro)
        env:
          DOMAIN: ${{ steps.resolve.outputs.domain }}
          SLUG_RAW: ${{ steps.resolve.outputs.slug }}
        run: |
          set -euo pipefail

          # --- Normalizações ---
          DOMAIN_TRIM="$(echo -n "${DOMAIN:-}" | tr -d '[:space:]')"
          # remove barras duplicadas/iniciais/finais do slug
          SLUG="$(echo -n "${SLUG_RAW:-}" | sed 's#^/*##; s#/*$##')"

          # --- Validações defensivas ---
          case "${DOMAIN_TRIM}" in
            pinacle.com.br|gestordecapitais.com|tetramusic.com.br) ;;
            *) echo "Domínio inválido: ${DOMAIN_TRIM}"; exit 1 ;;
          esac

          # Slug pode ser vazio (apaga landing na raiz),
          # ou: "meu-slug", "beta/meu-slug", "dev/meu-slug"
          if ! echo "${SLUG}" | grep -Eq '^$|([a-z0-9-]{1,64}|(beta|dev)/[a-z0-9-]{1,64})$'; then
            echo "Slug inválido: '${SLUG}'. Deixe em branco p/ raiz ou use 'meu-slug' | 'beta/meu-slug' | 'dev/meu-slug' (a-z0-9-)."
            exit 1
          fi

          ROOT="/var/www/pages/${DOMAIN_TRIM}"

          if [ -z "${SLUG}" ]; then
            # --- Caso: deletar landing da RAIZ do domínio ---
            echo "Apagando CONTEÚDO da raiz do domínio: ${ROOT}"
            ssh -i ~/.ssh/id_rsa -p "${SSH_PORT}" "${SSH_USER}@${SSH_HOST}" \
              "set -euo pipefail; \
               ROOT='${ROOT}'; \
               if [ ! -d \"\$ROOT\" ]; then echo 'Nada para apagar (raiz inexistente)'; exit 0; fi; \
               # apaga somente conteúdo (inclui ocultos), preserva a pasta raiz
               shopt -s dotglob nullglob; \
               CONTENT=(\"\$ROOT\"/*); \
               if [ \${#CONTENT[@]} -eq 0 ]; then echo 'Nada para apagar (raiz vazia)'; exit 0; fi; \
               rm -rf -- \"\$ROOT\"/* \"\$ROOT\"/.[!.]* \"\$ROOT\"/..?* || true; \
               echo 'Conteúdo da raiz apagado com sucesso.'"
          else
            # --- Caso: deletar subdiretório (slug/pasta) ---
            TARGET_REL="${SLUG}"
            TARGET_ABS="${ROOT}/${TARGET_REL}"

            echo "Apagando subdiretório do domínio:"
            echo "ROOT:   ${ROOT}"
            echo "TARGET: ${TARGET_ABS}"

            # Segurança: nunca tente remover a raiz do domínio aqui
            if [ "${TARGET_ABS}" = "${ROOT}" ]; then
              echo "Recusado: tentativa de excluir a raiz do domínio."
              exit 1
            fi

            ssh -i ~/.ssh/id_rsa -p "${SSH_PORT}" "${SSH_USER}@${SSH_HOST}" \
              "set -euo pipefail; \
               TARGET='${TARGET_ABS}'; \
               if [ -d \"\$TARGET\" ]; then \
                 rm -rf -- \"\$TARGET\"; \
                 echo 'Apagado: '\$TARGET; \
               else \
                 echo 'Nada para apagar: '\$TARGET; \
               fi"
          fi
